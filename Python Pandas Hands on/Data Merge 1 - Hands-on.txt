#!/bin/python3

#Write your code here

import pandas as pd
import numpy as np

#
# Task 1:
#
# Create a series named height_A with values 176.2,158.4,167.6,156.2,161.4. These values represent heights of 5 students of class A.
# Label each student as s1, s2, s3, s4, s5.
heights_A = pd.Series([176.2,158.4,167.6,156.2,161.4])
heights_A.index = ['s1','s2','s3','s4','s5']

# Create another series named weights_A with values 85.1, 90.2, 76.8, 80.4, 78.9.
# These values represent the Weight of 5 students of class A.
#   * Label each students as s1, s2, s3, s4, s5.
#

weights_A = pd.Series([85.1,90.2,76.8,80.4,78.9])
weights_A.index= ['s1','s2','s3','s4','s5']


# Create a dataframe named df_A which contains the height and weight of five students namely s1, s2, s3, s4, s5.
#   * Label the Columns as Student_height and Student_weight, respectively.

DataFrame_A={
  "Student_height":heights_A,
  "Student_weight":weights_A

}
# Add a new column Gender to the dataframe df_A with values  ["M","F","M","M","F"].
df_A = pd.DataFrame(DataFrame_A)
df_A["Gender"] = ["M","F","M","M","F"]


# Create anothr Series s, from a list [165.4, 82.7, "F"].
# Provide the following values to the argument index:  ['Student_height', 'Student_Weight', 'Gender']
# Set the value of the "name" argument of series, s, to s6.
s = pd.Series([165.4, 82.7, "F"],  index=["Student_height", "Student_weight"  ,"Gender"  ], name="s6")


# Append the series s to the dadtaframe df_A, and store the captured array in df_AA.
# Display the dataframe df_AA.
df_AA=df_A.append(s)
print(df_AA)



#
# Task 2
#
# Create another series named heights_B from a 1-D numpy array of 5 elements derived from the normal distribution of mean 170.0 and standard derivation 25.0.
# Set random seed to 100 before creating the heights_B series.

mean_A=170.0
s_deviation_A=25.0
np.random.seed(100)
heights_B= pd.Series(np.random.normal(loc=mean_A, scale=s_deviation_A,size=5), index=['s1','s2','s3','s4','s5'])


# Create another series named weights_B from 1-D numpy array of 5 elements derived from the normal distribution of mean 75.0 and standard deviation 12.0.
#   Set random seed to 100 before creating the weights_B series.
#   Label both series elements as s1,s2,s3,s4,s5
mean_B=75.0
s_deviation_B=12.0
np.random.seed(100)
weights_B= pd.Series(np.random.normal(loc=mean_B, scale=s_deviation_B,size=5), index=['s1','s2','s3','s4','s5'])

# Create a dataframe df_B containing the height and weight of students s1,s2,s3,s4,s5 belonging to class B.
# Label the column as Student_height and Student_weight respectively.

DataFrame_B={

   "Student_height":heights_B,
   "Student_weight":weights_B
}

df_B=pd.DataFrame(DataFrame_B)

# Change the index of df_B to ["s7", "s8", "s9", "s10", "s11"].
# Create the Gender column in df_B with values ["F","M","F","F","M"]
df_B.index=["s7", "s8", "s9", "s10", "s11"]
df_B["Gender"]=["F","M","F","F","M"]

# Concatenate two dataframes df_AA and df_B, and assign the result to df.
# Display the dataframe df.
#
df=pd.concat([df_AA,df_B])
print(df)