2. Milestone - Coding - Python - Frequency Sort

Given an array of nitem values, sort the array in ascending order first by the frequency of each value, then by the values themselves

Example

n=6

items (4, 5, 6, 5, 4, 3)

There are 2 values that occur once (3, 6).

There are 2 values that occur twice (4, 4, 5, 5).

The array of items sorted by frequency and then by value in ascending order is (3, 6.4.4.5.5]

Function Description

Complete the function itemsSort in the editor below.

itemsSort has the following parameter(s):

int items[n]: the array to sort

Returns

int[n]: the sorted array

Constraints

1sns2x105

1 â‰¤ items[i]s 106



Input Format for Custom Testing

Input from stdin will be processed as follows and passed to the function

The first line contains an integer in the size of items

The next n lines each contain an integer, items]


Sample Case 0

Sample Input 0


STDIN       Function
-------     ---------
5        ->  items[] size n=5

3        ->  items = [3, 1, 2, 3, 4]

1

2

2

4


Sample Output 0

1

4

2

2


Explanation

frequency of 1:[1],[3],[4]

frequency of 2:[2,2]

Sort the array by frequency and then by value,ascending.





Sample Case 1

Sample Input 1


STDIN       Function
-------     ---------
10       ->  items[] size n=10

8       ->  items = [8,5,5,5,5,1,1,1,4,4]

5

5

5

5

1

1

1

4

4


Sample Output 1

8

4

4

1

1

1

5

5

5

5


Explanation

frequency 1:[8]

frequency 2:[4,4]

frequency 3:[1,1,1]

frequency 4:[5,5,5,5]



------------------------------------------------------------------------------------------------------------------------------------------------------------------




#!/bin/python3

import math
import os
import random
import re
import sys



#
# Complete the 'itemsSort' function below.
#
# The function is expected to return an INTEGER_ARRAY.
# The function accepts INTEGER_ARRAY items as parameter.
#

from collections import Counter

def itemsSort(items):
    freq_counter = Counter(items)
    sorted_items = sorted(items, key=lambda x: (freq_counter[x], x))
    return sorted_items



if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    items_count = int(input().strip())

    items = []

    for _ in range(items_count):
        items_item = int(input().strip())
        items.append(items_item)

    result = itemsSort(items)

    fptr.write('\n'.join(map(str, result)))
    fptr.write('\n')

    fptr.close()