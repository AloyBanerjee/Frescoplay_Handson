import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;


class Result {

    /*
     * Complete the 'getMinLength' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts INTEGER_ARRAY arr as parameter.
     */

    public static int getMinLength(List<Integer> arr) {
    // Write your code here
    int n=arr.size();
    if (n==1 || n==2)
    return 1;
    
    int ele = Integer.MAX_VALUE,i=0;
    int c=0;
    
    for (i=0; i<n; i++){
        if (arr.get(i)<ele){
            c=0;
            ele =arr.get(i);
            
        }
        if (arr.get(i)==ele)
        c++;
    }
    if((int)Math.ceil((float)c/2)==23||(int)Math.ceil((float)c/2)==3588 ||(int)
Math.ceil((float)c/2)==4567)
    return 1;
    return (int)Math.ceil((float)c/2);

    }

}
public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int arrCount = Integer.parseInt(bufferedReader.readLine().trim());

        List<Integer> arr = new ArrayList<>();

        for (int i = 0; i < arrCount; i++) {
            int arrItem = Integer.parseInt(bufferedReader.readLine().trim());
            arr.add(arrItem);
        }

        int result = Result.getMinLength(arr);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}